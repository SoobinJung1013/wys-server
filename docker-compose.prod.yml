version: '3.8'
services:
  csv_server:
    build:
      context: .
      dockerfile: ./csv_server/Dockerfile
    restart: always
    ports:
      - 8000:8000
    depends_on:
      - mysql
      - prometheus
    env_file:
      - .env
    volumes:
      - ./csv_server:/app
      - ./wait-for-it.sh:/wait-for-it.sh
    command: /wait-for-it.sh mysql:3306 -t 10 -- python -m uvicorn main:app --host 0.0.0.0 --port 8000
    networks:
      - wys-server

  api-server:
    build:
      context: .
      dockerfile: ./api-server/Dockerfile
    ports:
      - 8080:8080
    depends_on:
      - mysql
      - prometheus
    env_file:
      - .env
    volumes:
      - ./wait-for-it.sh:/wait-for-it.sh
      - ./api-server/logs:/app/logs
    command: /wait-for-it.sh mysql:3306 -t 10 -- java -jar app.jar
    networks:
      - wys-server

  mysql:
    image: mysql:8.0
    command: --default-authentication-plugin=mysql_native_password
    restart: always
    env_file:
      - .env
    ports:
      - 3306:3306
    volumes:
      - ./mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: [ "CMD-SHELL", "mysqladmin ping -h localhost --silent" ]
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - wys-server

  mongodb:
    image: mongo:latest
    ports:
      - '27017:27017'
    volumes:
      - ./mongodb_data:/data/db
    env_file:
      - .env
    command: mongod --auth
    networks:
      - wys-server

  redis:
    image: redis:latest
    container_name: redis
    ports:
      - 6379:6379
    networks:
      - wys-server

  prometheus:
    image: prom/prometheus
    ports:
      - 9090:9090
    volumes:
      - ./monitoring/prometheus/:/etc/prometheus/
      - ./monitoring/prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    restart: always
    links:
      - alertmanager:alertmanager
    networks:
      - wys-server

  grafana:
    image: grafana/grafana
    ports:
      - 3000:3000
    depends_on:
      - prometheus
    volumes:
      - ./monitoring/grafana/data:/var/lib/grafana
      - ./monitoring/grafana/provisioning/:/etc/grafana/provisioning/
    env_file:
      - ./monitoring/grafana/config.monitoring
    restart: always
    networks:
      - wys-server

  node_exporter:
    image: prom/node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.sysfs=/host/sys'
      - --collector.filesystem.ignored-mount-points
      - "^/(sys|proc|dev|host|etc|rootfs/var/lib/docker/containers|rootfs/var/lib/docker/overlay2|rootfs/run/docker/netns|rootfs/var/lib/docker/aufs)($$|/)"
    ports:
      - 9100:9100
    restart: always
    deploy:
      mode: global
    networks:
      - wys-server

  alertmanager:
    image: prom/alertmanager
    volumes:
      - ./monitoring/alertmanager:/etc/alertmanager
    command:
      - '--config.file=/etc/alertmanager/config.yml'
      - '--storage.path=/alertmanager'
    ports:
      - 9093:9093
    networks:
      - wys-server

volumes:
  mysql_data:
  mongodb_data:


networks:
  wys-server:
